{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/기타",
    "result": {"pageContext":{"currentCategory":"기타","categories":["All","Spring","프로젝트","회고","Node.js","기타","네트워크","NestJS","Express"],"edges":[{"node":{"id":"94f7adbc-6e01-5de4-9ab6-ec5ad4add288","excerpt":"서버를 운영하다 보면, 예상치 못한 문제에 직면할 때가 많을 것이다.\n서버가 죽는다던지, 특정 로직에서 오류가 발생하는 등 하루종일 서버를 관찰하지 않는 이상 즉각적인 대응은 힘들 것이다.\n이런 를 대응하기 위해 Slack을 모니터링 알림으로 사용해 보고자 한다. Slack web hook을 이용해야 해서 다음 글을 참고하면 도움이 될 듯 하다. Slack Webhook API 생성하기 Sending messages using Incoming Webhooks 예시를 위해 일부러 Error를 throw 했는데, 직접 핸들링 하는 Error가 아니라 , ,  등 당장 처리할 수 없는 Error에 대해 모니터링 프로세스를 통해 빠른 대응으로 안정적인 서비스를 운영할 수 있어야 한다. ✍️ Error Handling 모니터링 프로세스를 놓던, 로깅을 하던 일단 에러에 대해 Handling 할 수 있어야 한다.\n단에서 지원하는 Filter가 있다면 상관없지만, 싱글 스레드로 동작하는 Node…","fields":{"slug":"/skill/slack-monitering/"},"frontmatter":{"categories":"Node.js 기타","title":"Slack을 서버 오류 알림으로 사용해 보자","date":"October 09, 2022"}},"next":{"fields":{"slug":"/skill/latency-strategy/"}},"previous":{"fields":{"slug":"/skill/korean-word-textualize/"}}},{"node":{"id":"698de596-f6ba-52d8-a45d-cf95844226d4","excerpt":"를 이용하면 슬랙의 특정 채널에 자동으로 글을 올리거나, 올라온 글을 받아 오는 Bot을 만들 수 있다. 먼저,  페이지에서 App을 만들고 권한 설정 작업을 시작해야 한다.\nApp 생성 및 권한 설정이 완료되었다면 Slack에 해당 App을 설치하고, 글을 등록할 채널에 생성할 App을 추가해 준다. 이후 Node.js 또는 여러 Api 서버로 글을 등록 할 수 있다.\n특정 주기마다 자동으로 글을 올리고 싶다면 각 언어, 프레임 워크 별 전용 모듈을 활용하면 된다! 🤖 Slack Bot 생성  먼저, https://api.slack.com 에 접속해 준다. 사이트에 접속 했다면 왼쪽 아래에  버튼을 눌러준다.  밑의 From an app manifest는 신경쓰지 말자 그럼 이렇게 창이 뜨는데 위의 를 클릭하자!  워크스페이스가 없다면 여기로! 봇 이름을 입력해 주고 밑에 어느 워크스페이스에 생성할 지 정해준다.\n그러면 밑의 이 활성화 되는데 눌러주자!  슬랙 봇을 전반적으로 설…","fields":{"slug":"/skill/slack-bot/"},"frontmatter":{"categories":"기타","title":"쉽고 간단한 Slack Bot 만들기","date":"January 03, 2022"}},"next":{"fields":{"slug":"/skill/express-tdd/"}},"previous":{"fields":{"slug":"/skill/express-error-middleware/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}